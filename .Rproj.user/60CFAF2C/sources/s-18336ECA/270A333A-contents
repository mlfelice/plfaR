---
title: "20190905_spruce_ea_2017-2018_quality-check"
author: "Mark Felice"
date: "September 5, 2019"
output: 
  html_document:
    fig_caption: yes
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
# Summary
This document explores the data variability in elemental analysis (%C, %N, %S) 
and CNS isotope ratios, in particular d34S, in order to determine reliability.
Here, we look at data from the most recent EA-IRMS run of SPRUCE peat samples, 
and focus on the standards because they included technical replicates.In 
general, the %C, %N, and %S showed relatively little variation. As expected, 
the isotopes showed greater variability than the elemental %. Measured values 
of d15N and d34S also showed statistically correlations to IRMS run position, 
suggesting possible instrument drift. However, in both cases, it appears that a
single sample is driving the trend. Peach leaves for d34S, and sulfanilamide 
for d15N. There is still a statistically significant correlation between IRMS 
run position and d15N and d34S, but the the correlation is much smaller without
the standards mentioned above. N_percent also showed a statistically 
significant correlation to IRMS run position. However, the magnitude of the 
correlation is relatively small.
Conclusion: There might be a small amount of instrument drift with d15N and 
d34S, but the issues might be related to the standards as well. It might be 
worthwhile to look into the peach leaves and sulfanilamide standards.
UPDATE - 9/12/2019: I learned that this run has not undergone drift correction,
so cannot make conclusions about systematic drift being an issue.

## Analysis
### Load packages and define plotting and summary functions
```{r, warning=FALSE, message=FALSE, results='hide'}
library(tidyverse)
library(cowplot)
library(writexl)
library(readxl)
library(knitr)
library(captioner)
```

```{r, include=FALSE}
sessionInfo()
```

```{r}
make_plots <- function(df, x_var, y_vars, color_var, facet_var = NULL, 
                       shape_var = NULL, n_row = 2, n_col = 3, type = 'jitter',
                       scaled = FALSE, labs = NULL){
  plt_list <- vector('list', length = length(y_vars))
  
  i = 1
  
  for(y in y_vars){
    names(plt_list)[i] <- y
    if(scaled == TRUE){
      ymin <- min(df[[y]], na.rm = TRUE)
      ymax <- max(df[[y]], na.rm = TRUE)
    }
    if(type == 'jitter'){
      plt_legend <- ggplot(data = df, aes_string(x = x_var, y = y)) + 
        geom_jitter(width = 0.2, alpha = 0.75, aes_string(color = color_var, shape = shape_var))
      
      plt <- ggplot(data = df, aes_string(x = x_var, y = y)) + 
        geom_boxplot() +
        geom_jitter(width = 0.2, alpha = 0.75, aes_string(color = color_var, shape = shape_var)) +
        theme(legend.position = 'none',
              axis.text.x = element_blank())
      
      if(!is.null(facet_var)){
        plt <- plt + facet_grid(facet_var) 
      }
      
      plt_list[[y]] <- plt
    }
    if(type =='regression'){
      plt_legend <- ggplot(data = df, aes_string(x = x_var, y = y)) + 
        geom_smooth(method = 'lm', se = TRUE, alpha = 0.3, aes_string(color = color_var)) +
        geom_point(alpha = 0.75, aes_string(color = color_var, shape = shape_var)) 
      
      plt <- ggplot(data = df, aes_string(x = x_var, y = y)) + 
        geom_smooth(method = 'lm', se = TRUE, alpha = 0.3, aes_string(color = color_var)) +
        geom_point(alpha = 0.75, aes_string(color = color_var, shape = shape_var)) +
        theme(legend.position = 'none')
      if(!is.null(facet_var)){
        plt <- plt + facet_grid(facet_var) 
      }
      plt_list[[y]] <- plt
    }
    
    i = i + 1
  }
  
  leg <- get_legend(plt_legend) # Add legend back in
  
  if(is.null(labs)){
    multi_plt <- plot_grid(plotlist = plt_list, labels = y_vars, nrow = n_row, ncol = n_col)
  } else{
    multi_plt <- plot_grid(plotlist = plt_list, labels = labs, nrow = n_row, ncol = n_col)
  }
  # Plot final figure
  multi_plt_leg <- plot_grid(multi_plt, legend = leg, nrow = 1, ncol = 2, rel_widths = c(3, 0.8)) 
}

summarize_qc_vals <- function(df, fun){ 
  
  summary_val <- switch(fun,
                        rel_sd = quos(rel_sd = abs(sd(.)/mean(.))),
                        rel_range = quos(abs((max(.)-min(.))/mean(.))),
                        mean_sd = quos(mean = mean(.), sd = sd(.))
  )
  
  df2 <- df %>% 
    group_by(Description) %>% 
    summarise_at(vars(C_percent:d34S), funs(!!!summary_val, n = n())) %>%
    rename(Replicates = C_percent_n) %>%
    select(everything(), -contains('_n')) %>%
    filter(Replicates > 1) %>%
    ungroup()
} # Summarizes dataframes with various functions

transform_vals <- function(df, fun){
  
  transformation <- switch(fun,
                           normalize = quos(normalized = ./mean(.)),
                           frac_change = quos(frac_change = (.-dplyr::lead(.))/.)
  )
  
  df2 <- df %>% 
    group_by(Description) %>%
    arrange(IRMS_analysis_number) %>%
    mutate_at(vars(C_percent:d34S), funs(!!!transformation, reps = n())) %>%
    rename(Replicates = C_percent_reps) %>%
    select(everything(), -contains('_reps')) %>%
    filter(Replicates > 1) %>%
    ungroup()
}

make_regression_df <- function(df, x_var, response_vars){
  extract_mod_results <- function(i, x_var, df){
    model <- summary(lm(df[[i]] ~ df[[x_var]], data = df))
    model_coef <- model$coefficients
    
    mod_results <- data.frame(response_var = as.character(i), 
                              a = round(model_coef[2, 1], 3),
                              std_err = round(model_coef[2, 2], 3), 
                              t_val = round(model_coef[2, 3], 3), 
                              p_val = round(model_coef[2, 4], 4), 
                              adj_r_sq = round(model$adj.r.squared, 3))
  }
  results_list <- lapply(response_vars, extract_mod_results, x_var, df)
  
  rbind_list(results_list)
  
} # Run linear regression on x var and vector of y vars

delete_outliers <- function(df, cols, method = 'iqr'){
  if(method == 'iqr'){
    for(c in cols){
      iqr <- quantile(df[[c]], 0.75, na.rm = TRUE) - quantile(df[[c]], 0.25, na.rm = TRUE)
      q_75 <- quantile(df[[c]], 0.75, na.rm = TRUE) + (1.5 * iqr)
      q_25 <- quantile(df[[c]], 0.25, na.rm = TRUE) - (1.5 * iqr)
      
      df[which(df[c] < q_25 | df[c] > q_75), c] <- NA
    }  
  }
  
  if(method == 'sd'){
    for(c in cols){
      min_out <- mean(df[[c]], na.rm = TRUE) - sd(df[[c]], na.rm = TRUE) * 3
      max_out <- mean(df[[c]], na.rm = TRUE) + sd(df[[c]], na.rm = TRUE) * 3
      
      df[which(df[[c]] < min_out | df[[c]] > max_out), c] <- NA
    }
  }
  
  return(df)
} # Removes outliers, > mean +/- 3sd ('sd' method) or > quartile +/- 1.5 IQR
```

### Load and clean EA IRMS data from Excel file
```{r}
origin_wd <- getwd()  # store current working directory
setwd('C:/Users/Mark/Dropbox/umn_gutknecht_postdoc/spruce_project/solid_peat_cns_isotope/')
source_fname <- 'data/source_data_files/20190725_EA_Toner_EL_SPRUCE 2017 2018 CNS2_processed.xls' 

# load headers only to work around multiline headers/merged Excel cells
headers <- read_excel(source_fname, sheet = 'Compiled and Summary', 
                      col_names = FALSE, na="", n_max = 2) %>% fill(1:4)

# load data portion of Excel file
cns_2017_df <- read_excel(source_fname, sheet = 'Compiled and Summary', 
                          col_names = unlist(headers[2, ]), skip = 2, 
                          na = 'NA') %>%
  # Extract plot and depth info from Sample ID
  mutate(Top_core_depth_cm = as.numeric(str_extract(`Sample ID`, 
                                                    '(?<=\\s)\\d+(?=-)'))*(-1), 
         Bottom_core_depth_cm = as.numeric(str_extract(`Sample ID`, 
                                                       '(?<=-)\\d+'))*(-1),
         Plot = str_extract(`Sample ID`, '(?<=Plot\\s)\\d+(?=\\s)'),
         Mid_core_depth_cm = round((Top_core_depth_cm + Bottom_core_depth_cm)/2),
         Core_ID = paste('2017', Plot, Bottom_core_depth_cm, sep = '_'),
         Year = 2017) %>%
  select(IRMS_analysis_number = `Analysis number`, `Sample ID`,
         Description, `Wt (mg)`, C_percent = `Corrected %C`, 
         d13C = `d13C vs VPDB corrected`, N_percent = `Corrected %N`, 
         d15N = `d15N vs At Air corrected`, S_percent = `Corrected %S`,
         d34S = `d34S vs FeS in CDM corrected`, Year, Plot)
```
<br>
I focus only on the standards, as they are the only samples with
technical replicates in this data set. I also removed samples with IRMS number
79 and greater, as the reduction tube was used up. Rosemount soil_4.raw, 
Peachleaves_13.raw, Peachleaves_14.raw were outliers, but were already removed 
due to their position in the run.
```{r} 
# Select only the standards and remove samples from the end of run
cns_2017_std_df <- cns_2017_df %>% 
  filter(!str_detect(Description, 'unknown|blnk|linearity standard'),
         IRMS_analysis_number < 79)
```

### Plot data
#### Overall scatter
Box plots show high spread within replicates for isotopes with most samples. Element
% shows much less variation.
```{r fig1, fig.height=6, fig.width=10, fig.cap='\\label{fig:fig1}Figure 1. CNS and isotope ratios split by sample. Outliers are included', warning=FALSE}
# Define plotting variables and labels
y_vars <- c('d13C', 'd15N', 'd34S', 'C_percent', 'N_percent', 'S_percent')
y_labs <- c('d13C', 'd15N', 'd34S', '%C', '%N', '%S')

box_plots <- make_plots(cns_2017_std_df, 'Description', y_vars, 
                          'Description', facet_var = NULL, shape_var = NULL,
                          n_row = 2, n_col = 3, type = 'jitter', 
                          scaled = FALSE, labs = y_labs)
box_plots
```

#### Systematic drift
Most isotopes and elements did not show consistent substantial or systematic 
drift. However, d34S consistently increased throughout the IRMS run, except for the S international reference (barium sulfate), and d15N consistently decreased throughout the IRMS run (except for barium sulfate).
```{r fig2, fig.height=6, fig.width=10, warning=FALSE, fig.cap='\\label{fig:fig2}Figure 2. CNS and isotope ratios versus IRMS run position.'}
regression_plots <- cns_2017_std_df %>%
  make_plots('IRMS_analysis_number', y_vars, 
                       'Description', facet_var = NULL, shape_var = NULL,
                       n_row = 2, n_col = 3, type = 'regression', 
                       scaled = FALSE, labs = y_labs)
regression_plots
```

```{r fig3, warning=FALSE, fig.cap='\\label{fig:fig3}Figure 3. d34S versus IRMS run position. All d34S data points are included.'}
cns_2017_std_df %>%
ggplot(aes(x = IRMS_analysis_number, y = d34S)) +
  geom_smooth(method = 'lm', alpha = 0.5, aes(color = Description)) +
  geom_point(alpha = 1, aes(color = Description)) +
  scale_y_continuous(limits = c(-40, 25))
```

Drift in d34S was large, with several-fold increases from the minimum to maximum
values.
```{r}
perc_change <- cns_2017_std_df %>% 
  group_by(Description) %>%
  summarise(percent_change = abs((max(d34S)-min(d34S))/min(d34S)*100))

kable(perc_change, caption = 'Table 1. Relative (%) change from minimum to maximum element % or isotope ratio for each standard.')
```

To pool and analyze replicates from all samples, I normalized all values to the
tech replicate mean for each sample. This shows a positive correlation 
between IRMS run position and each of d34S, and %N, and a negative correlation 
between IRMS run position and each of d13C, d15N, %C, and %S.
```{r fig5, fig.height=6, fig.width=10, warning=FALSE, fig.cap='\\label{fig:fig5}Figure 5. CNS and isotope ratios versus IRMS run position for all samples combined, with values normalized to the mean of technical replicates for each sample.'}
normalized_y_vars <- c('d13C_normalized', 'd15N_normalized', 'd34S_normalized',
                      'C_percent_normalized', 'N_percent_normalized',
                      'S_percent_normalized')
regression_combined_plots <- cns_2017_std_df %>%
  transform_vals('normalize') %>%
  make_plots('IRMS_analysis_number', normalized_y_vars, 
                       'Year', facet_var = NULL, shape_var = 'Description',
                       n_row = 2, n_col = 3, type = 'regression', 
                       scaled = FALSE, labs = y_labs)
regression_combined_plots
```

Linear regression only shows a statistically significant negative relationship 
between IRMS run position and d15N. However, the trends observed for d15N and
d34S appear to be driven by sulfanilamide samples early and late in the run.
```{r, warning=FALSE}
lm_raw_results_df <- cns_2017_std_df %>% 
  transform_vals('normalize') %>%
  make_regression_df('IRMS_analysis_number', normalized_y_vars)

kable(lm_raw_results_df, caption = 'Linear regression results for relationship between IRMS run position and element % or isotope ratio. Outliers, defined as outside 1.5x interquartile range, were removed prior to linear regression')
```

The correlation between d15N and IRMS run position remained significant after
removing sulfanilamide samples, but the magnitude of the effect was much smaller. 
```{r}
# Repeat regression for d15N without sulfanilamide (% elemental standard)
cns_2017_std_df %>% 
  filter(!str_detect(Description, 'unknown|blnk|linearity standard|% element')) %>%
  transform_vals('normalize') %>%
  make_regression_df('IRMS_analysis_number', c('d15N_normalized'))
# Repeat regression for d15N without peach leaves (house matrix standard)
cns_2017_std_df %>% 
  filter(!str_detect(Description, 'unknown|blnk|linearity standard|house matrix')) %>%
  transform_vals('normalize') %>%
  make_regression_df('IRMS_analysis_number', c('d15N_normalized'))
# Repeat regression for d15N without peach leaves and USGS40 house matrix
# standard and international reference
cns_2017_std_df %>% 
  filter(!str_detect(Description, 'unknown|blnk|linearity standard|house matrix|international')) %>%
  transform_vals('normalize') %>%
  make_regression_df('IRMS_analysis_number', c('d15N_normalized'))
```

---

#### Systematic drift - Outliers removed
There were a number of extreme outliers that I was concerned might be obscuring
trends in the data, so I repeated the analyses above after removing outliers (
defined here as points outside of 1.5x the interquartile range).
Most isotopes and elements did not show consistent substantial or systematic 
drift. However, d34S consistently increased throughout the IRMS run, except for the S international reference (barium sulfate), and d15N consistently decreased (except USGS40).
```{r fig6, fig.height=6, fig.width=10, warning=FALSE, fig.cap='\\label{fig:fig6}Figure 6. CNS and isotope ratios versus IRMS run position. Outliers, defined as outside 1.5x interquartile range, have been removed from these plots.'}
regression_plots <- cns_2017_std_df %>%
  delete_outliers(cols = y_vars) %>%
  make_plots('IRMS_analysis_number', y_vars, 
                       'Description', facet_var = NULL, shape_var = NULL,
                       n_row = 2, n_col = 3, type = 'regression', 
                       scaled = FALSE, labs = y_labs)
regression_plots
```

```{r fig7, warning=FALSE, fig.cap='\\label{fig:fig7}Figure 7. d34S versus IRMS run position. All d34S data points are included.'}
cns_2017_std_df %>%
ggplot(aes(x = IRMS_analysis_number, y = d34S)) +
  geom_smooth(method = 'lm', alpha = 0.5, aes(color = Description)) +
  geom_point(alpha = 1, aes(color = Description)) +
  scale_y_continuous(limits = c(-40, 25))
```

```{r fig8, warning=FALSE, fig.cap='\\label{fig:fig8}Figure 8. d15N versus IRMS run position. All d15N data points are included.'}
cns_2017_std_df %>%
ggplot(aes(x = IRMS_analysis_number, y = d15N)) +
  geom_smooth(method = 'lm', alpha = 0.5, aes(color = Description)) +
  geom_point(alpha = 1, aes(color = Description))
```


Drift in d34S was large, with several-fold increases from the minimum to maximum
values.
```{r}
perc_change <- cns_2017_std_df %>% 
  group_by(Description) %>%
  summarise(percent_change = abs((max(d34S)-min(d34S))/min(d34S)*100))

kable(perc_change, caption = 'Relative (%) change from minimum to maximum element % or isotope ratio for each standard.')
```

```{r fig9, fig.height=6, fig.width=10, warning=FALSE, fig.cap='\\label{fig:fig9}Figure 9. CNS and isotope ratios versus IRMS run position for all samples combined, with values normalized to the mean of technical replicates for each sample. Outliers, defined as outside 1.5x interquartile range, have been removed from these plots.'}
normalized_y_vars <- c('d13C_normalized', 'd15N_normalized', 'd34S_normalized',
                      'C_percent_normalized', 'N_percent_normalized',
                      'S_percent_normalized')
regression_combined_plots <- cns_2017_std_df %>%
  delete_outliers(cols = y_vars) %>%
  transform_vals('normalize') %>%
  make_plots('IRMS_analysis_number', normalized_y_vars, 
                       'Year', facet_var = NULL, shape_var = 'Description',
                       n_row = 2, n_col = 3, type = 'regression', 
                       scaled = FALSE, labs = y_labs)
regression_combined_plots
```

Linear regression shows a statistically significant positive relationship between IRMS run position and d15N values. None of the other isotope ratios or element % were significantly correlated to IRMS run position.
```{r, warning=FALSE}
lm_raw_results_df <- cns_2017_std_df %>% 
  delete_outliers(cols = y_vars) %>%
  transform_vals('normalize') %>%
  make_regression_df('IRMS_analysis_number', normalized_y_vars)

kable(lm_raw_results_df, caption = 'Linear regression results for relationship between IRMS run position and element % or isotope ratio. Outliers, defined as outside 1.5x interquartile range, were removed prior to linear regression')
```
